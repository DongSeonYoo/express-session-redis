generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model account_tb {
  id           Int          @id @default(autoincrement())
  login_id     String       @unique @db.VarChar(30)
  password     String       @db.Char(60)
  email        String       @unique @db.VarChar(256)
  name         String       @db.VarChar(10)
  phone_number String?      @db.Char(11)
  profile_img  String?
  provider     String?      @db.VarChar(10)
  created_at   DateTime     @default(now()) @db.Timestamptz(6)
  updated_at   DateTime     @default(now()) @db.Timestamptz(6)
  deleted_at   DateTime?    @db.Timestamptz(6)
  comment_tb   comment_tb[]
  post_tb      post_tb[]
  reply_tb     reply_tb[]
}

model comment_tb {
  id         Int        @id @default(autoincrement())
  account_id Int        @default(autoincrement())
  post_id    Int        @default(autoincrement())
  content    String
  created_at DateTime   @default(now()) @db.Timestamptz(6)
  updated_at DateTime   @default(now()) @db.Timestamptz(6)
  deleted_at DateTime?  @db.Timestamptz(6)
  account_tb account_tb @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_account_tb_to_comment_tb")
  post_tb    post_tb    @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_post_tb_to_comment_tb")
  reply_tb   reply_tb[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model post_img_tb {
  id         Int      @id @default(autoincrement())
  post_id    Int      @default(autoincrement())
  post_img   String?
  created_at DateTime @default(now()) @db.Timestamptz(6)
  post_tb    post_tb  @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_post_tb_to_post_img_tb")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model post_tb {
  id          Int           @id @default(autoincrement())
  title       String        @db.VarChar(100)
  content     String
  created_at  DateTime      @default(now()) @db.Timestamptz(6)
  updated_at  DateTime      @default(now()) @db.Timestamptz(6)
  account_id  Int           @default(autoincrement())
  deleted_at  DateTime?     @db.Timestamptz(6)
  comment_tb  comment_tb[]
  post_img_tb post_img_tb[]
  account_tb  account_tb    @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_account_tb_to_post_tb")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model reply_tb {
  id         Int        @id @default(autoincrement())
  comment_id Int        @default(autoincrement())
  content    String
  created_at DateTime   @default(now()) @db.Timestamptz(6)
  updated_at DateTime   @default(now()) @db.Timestamptz(6)
  account_id Int        @default(autoincrement())
  deleted_at DateTime?  @db.Timestamptz(6)
  account_tb account_tb @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_account_tb_to_reply_tb")
  comment_tb comment_tb @relation(fields: [comment_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_comment_tb_to_reply_tb")
}
